export const ASPECT_NUM = [...[...Array(61)].map((_, i) => i + 1), 73];

export const EDGES = [
  [12, 15, 29],
  [20, 1, 15],
  [26, 1, 27],
  [31, 27, 29],
  [32, 15, 27],
  [38, 1, 3],
  [42, 1, 29],
  [43, 3, 29],
  [44, 3, 40],
  [47, 27, 40],
  [6, 26, 44],
  [11, 42, 44],
  [13, 40, 44],
  [17, 40, 26],
  [18, 3, 44],
  [23, 40, 47],
  [25, 29, 44],
  [33, 32, 42],
  [59, 32, 20],
  [34, 27, 44],
  [61, 27, 42],
  [39, 29, 20],
  [45, 29, 26],
  [48, 1, 26],
  [2, 42, 39],
  [4, 13, 1],
  [5, 1, 33],
  [8, 6, 45],
  [9, 25, 26],
  [50, 11, 42],
  [51, 15, 33],
  [57, 17, 23],
  [36, 44, 45],
  [55, 42, 48],
  [46, 29, 33],
  [7, 15, 36],
  [49, 36, 25],
  [54, 8, 11],
  [35, 1, 36],
  [14, 6, 7],
  [52, 11, 35],
  [60, 29, 7],
  [16, 14, 27],
  [19, 11, 14],
  [22, 13, 14],
  [30, 40, 14],
  [10, 16, 14],
  [21, 16, 26],
  [24, 16, 22],
  [58, 19, 30],
  [28, 6, 16],
  [37, 15, 19],
  [73, 2, 19],
  [41, 26, 40],
  [56, 21, 32],
  [53, 37, 15],
] as const satisfies [number, number, number][];

export const LINKS_MAP: Map<number, Set<number>> = EDGES.reduce(
  (acc, [from, to1, to2]) => {
    acc.set(from, acc.get(from) || new Set());
    acc.get(from)?.add(to1);
    acc.get(from)?.add(to2);

    acc.set(to1, acc.get(to1) || new Set());
    acc.get(to1)?.add(from);

    acc.set(to2, acc.get(to2) || new Set());
    acc.get(to2)?.add(from);

    return acc;
  },
  new Map<number, Set<number>>()
);
